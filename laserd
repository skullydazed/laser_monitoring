#!/usr/bin/env python3.4
import serial
import shlex
import time
from subprocess import call


def to_volt(reading):
    """Returns the voltage for a reading from an Ardunio's analog pin.
    """
    return int(reading) * .0049


def split_line(raw_line):
    """Returns a tuple containing the following fields:

           current1, current2, current3, dc_current, temp1, temp2

       Each field is a voltage between 0 and 5v
    """
    raw_line = raw_line.decode('utf-8')
    datapoints = raw_line.strip().split('\t')
    datapoints = map(to_volt, datapoints)

    return datapoints


def handle_data(current1, current2, current3, dc_current, temp1, temp2):
    """Write the datapoints out to a file or print them or something.
    """
    rrd_cmd = shlex.split('rrdtool update readings.rrd N:%s:%s:%s:%s:%s:%s' % (current1, current2, current3, dc_current, temp1, temp2))
    rrd_exec = call(rrd_cmd)
    if rrd_exec != 0:
        print('There was an error. Maybe you should look into that?')


with serial.Serial('/dev/ttyACM0', 57600, timeout=5) as arduino:
    while True:
        try:
            current1, current2, current3, dc_current, temp1, temp2 = \
                split_line(arduino.readline())
        except ValueError:
            continue

        # Calculate the current reading for the DFrobot sensors
        # http://www.dfrobot.com/wiki/index.php/50A_Current_Sensor(SKU:SEN0098)
        current1 = current1 * .004
        current2 = current2 * .004
        current3 = current3 * .004

        # Calculate the current reading for the DC load
        # FIXME, currently reports the voltage

        # Calculate the temperature
        temp1 = temp1 * 100
        temp2 = temp2 * 100

        # Handle the parsed datapoints
        handle_data(current1, current2, current3, dc_current, temp1, temp2)
